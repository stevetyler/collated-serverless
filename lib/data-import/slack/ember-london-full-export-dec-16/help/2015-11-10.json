[
    {
        "type": "message",
        "user": "U03V8C0DJ",
        "text": "If i extend a component, is there any way to specify it use a different template to that of its parent component?",
        "ts": "1447146904.000002"
    },
    {
        "type": "message",
        "user": "U051MHBQU",
        "text": "bit of a noob question here: I have a pretty simple index view of a list of objects in the store ordered by a `date` attribute descending. When I add a new object it gets added to the store, but is placed at the end of the list. When I refresh the index page, it\u2019s placed correctly as the first item in the list. What am I doing wrong?",
        "ts": "1447151149.000003"
    },
    {
        "user": "U04BGLGM3",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U04BGLGM3|geekygrappler> has joined the channel",
        "ts": "1447156982.000004"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "<@U051MHBQU> what does the code look like?",
        "ts": "1447157216.000005"
    },
    {
        "type": "message",
        "user": "U051MHBQU",
        "text": "<@U04BGLGM3>: which bit?",
        "ts": "1447157244.000006"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "The route",
        "ts": "1447157247.000007"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "and the template",
        "ts": "1447157254.000008"
    },
    {
        "type": "message",
        "user": "U051MHBQU",
        "text": "The interesting bits:\n```\nmodel: function() {\n    return this.store.findAll('transaction');\n  },\n\n  sortProperties: ['date'],\n  sortAscending: false\n```",
        "ts": "1447157288.000009"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "(or component)",
        "ts": "1447157289.000010"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "Ok and when you add a new transaction?",
        "ts": "1447157305.000011"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "how do you do that?",
        "ts": "1447157308.000012"
    },
    {
        "type": "message",
        "user": "U051MHBQU",
        "text": "```\ncreateTransaction: function() {\n      var transaction = this.store.createRecord('transaction', {\n        description: this.get('description'),\n        value: parseFloat(this.get('value')),\n        tag_list: this.get('tag_list')\n      });\n\n      transaction.save();\n      this.transitionToRoute('transactions');\n    }\n```",
        "ts": "1447157347.000013"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "OK so you\u2019re on a separate route, like a new or create route, you create the transaction then transition to the index route and it\u2019s not sorted the new transaction correctly?",
        "ts": "1447157450.000014"
    },
    {
        "type": "message",
        "user": "U051MHBQU",
        "text": "bingo",
        "ts": "1447157682.000015"
    },
    {
        "type": "message",
        "user": "U04BGLGM3",
        "text": "OK I\u2019ve never tried sorting, so I don\u2019t know the answer off the top of my head, but with those two code snippets I\u2019m sure someone else will be able to help. If not I\u2019ll have a look tonight (at work atm).",
        "ts": "1447158730.000016"
    },
    {
        "user": "U0C5RUAKW",
        "type": "message",
        "subtype": "channel_join",
        "text": "<@U0C5RUAKW|alexloiz> has joined the channel",
        "ts": "1447172260.000017"
    },
    {
        "type": "message",
        "user": "U0C5RUAKW",
        "text": "any smart ideas on stripping out console logs \/ ember logs in templates for production builds? (except monkeypatching)",
        "ts": "1447172291.000018"
    },
    {
        "type": "message",
        "user": "U0C5RUAKW",
        "text": "(using ember-cli)",
        "ts": "1447172342.000019"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "<@U0C5RUAKW>: you might be able to use babel directly to do it",
        "ts": "1447180528.000020"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "<https:\/\/www.npmjs.com\/package\/babel-plugin-remove-console>",
        "attachments": [
            {
                "title": "npm: babel-plugin-remove-console",
                "title_link": "https:\/\/www.npmjs.com\/package\/babel-plugin-remove-console",
                "text": "Remove console.* calls",
                "fallback": "npm: babel-plugin-remove-console",
                "image_url": "https:\/\/www.npmjs.com\/static\/images\/touch-icons\/open-graph.png",
                "from_url": "https:\/\/www.npmjs.com\/package\/babel-plugin-remove-console",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 1759,
                "id": 1
            }
        ],
        "ts": "1447180543.000021"
    }
]