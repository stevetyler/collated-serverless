[
    {
        "type": "message",
        "user": "U051MHBQU",
        "text": "<@U0BNR9FCY>: is this what you\u2019re after? <http:\/\/stackoverflow.com\/questions\/18812730\/ember-data-lazy-load-association-with-links-attribute>",
        "attachments": [
            {
                "title": "Ember-data lazy load association with \"links\" attribute",
                "title_link": "http:\/\/stackoverflow.com\/questions\/18812730\/ember-data-lazy-load-association-with-links-attribute",
                "text": "I have a model Teacher which has many Students. The models are defined as follows: App.Teacher = DS.Model.extend({ email: DS.attr('string'), students: DS.hasMany('student') }); App.Student =",
                "fallback": "Ember-data lazy load association with \"links\" attribute",
                "thumb_url": "http:\/\/cdn.sstatic.net\/stackoverflow\/img\/apple-touch-icon@2.png?v=73d79a89bded&a",
                "from_url": "http:\/\/stackoverflow.com\/questions\/18812730\/ember-data-lazy-load-association-with-links-attribute",
                "thumb_width": 316,
                "thumb_height": 316,
                "id": 1
            }
        ],
        "ts": "1448013402.000003"
    },
    {
        "type": "message",
        "user": "U0BNR9FCY",
        "text": "<@U051MHBQU> ideally yes. My problem is that the API doesn't have the correct endpoint. So when I use the `hasMany` annotation the `JSONAPIAdapter` can't get the relationships.\nI'm looking for a clean way to handle this.\n\nExample:\nGet main model instance\n```\nGET \/api\/authors\/1\n\n{\n  \"data\": {\n    \"id\": 1,\n    \"type\": \"author\",\n    \"attributes\": {\n      ...\n    }\n  }\n}\n```\nGet model instance relationships\n```\nGET \/api\/posts?authorId=1\n\n{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"type\": \"post\",\n      \"attributes\": {\n        \"authorId\": 1\n        ...\n      },\n      ...\n    }\n  ]\n}\n```\n\nSo far I've implemented a manual request for the relationships within the store's promise and then created each record with the response data.",
        "ts": "1448058816.000005"
    }
]